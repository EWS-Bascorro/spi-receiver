;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 4/4/2018
;Author  : krismonb
;Company : bismillah - man jadda wajada
;Comments:
;
;
;Chip type               : ATmega2560
;Program type            : Application
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 2048
;*****************************************************/
;
;#include <mega2560.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Standard Input/Output functions
;#include <stdio.h>
;#include <stdlib.h>
;
;// SPI interrupt service routine
;int ex,ye;
;
;char Data1[4],Data2[4],Data3[4];
;unsigned char Count2,Count1,Count0,DataRx;
;
;void konversi();
;void init();
;
;interrupt [SPI_STC] void spi_isr(void)
; 0000 0028 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0029 char status,data;
; 0000 002A data=SPDR;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	status -> R17
;	data -> R16
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 002B switch(DataRx)
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 002C {
; 0000 002D     case 0:
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 002E                 if(data=='!'){DataRx=1; Count0=0;Data1[0]=NULL;Data1[1]=NULL;Data1[2]=NULL;Data1[3]=NULL;}
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 002F                 if(data=='@'){DataRx=2; Count1=0;Data2[0]=NULL;Data2[1]=NULL;Data2[2]=NULL;Data2[3]=NULL;}
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0030 
; 0000 0031     break;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0032 
; 0000 0033     case 1:
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0034         if(data=='|'){DataRx=0; Count0=0;}
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0035         else {
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0036         Data1[Count0] = data; Count0++;}
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0037     break;
;PCODE: $0000004C VOL: 0
; 0000 0038 
; 0000 0039     case 2:
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 003A         if(data=='|'){DataRx=0; Count1=0;}
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 003B         else{
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 003C         Data2[Count1]=data; Count1++;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 003D         }
;PCODE: $0000005C VOL: 0
; 0000 003E     break;
;PCODE: $0000005D VOL: 0
; 0000 003F   }
;PCODE: $0000005E VOL: 0
; 0000 0040 }
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;
;void konversi(){
; 0000 0042 void konversi(){
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0043     ex = atoi(Data1);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0044     ye = atoi(Data2);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0045 }
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;
;void main(void){
; 0000 0047 void main(void){
;PCODE: $0000006D VOL: 0
; 0000 0048  init();
;PCODE: $0000006E VOL: 0
; 0000 0049  while(1){
;PCODE: $0000006F VOL: 0
; 0000 004A   konversi();
;PCODE: $00000070 VOL: 0
; 0000 004B   printf("%d %d\r\n",ex,ye);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 004C  }
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 004D }
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;// Declare your global variables here
;
;void init()
; 0000 0051 {
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0052 // Declare your local variables here
; 0000 0053 
; 0000 0054 // Crystal Oscillator division factor: 1
; 0000 0055 #pragma optsize-
; 0000 0056 CLKPR=0x80;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0057 CLKPR=0x00;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0058 #ifdef _OPTIMIZE_SIZE_
; 0000 0059 #pragma optsize+
; 0000 005A #endif
; 0000 005B 
; 0000 005C // Input/Output Ports initialization
; 0000 005D // Port A initialization
; 0000 005E // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 005F // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0060 PORTA=0x00;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0061 DDRA=0x00;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0062 
; 0000 0063 // Port B initialization
; 0000 0064 // Func7=In Func6=In Func5=In Func4=In Func3=Out Func2=In Func1=In Func0=In
; 0000 0065 // State7=T State6=T State5=T State4=T State3=0 State2=T State1=T State0=T
; 0000 0066 PORTB=0x00;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0067 DDRB=0x08;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0068 
; 0000 0069 // Port C initialization
; 0000 006A // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 006B // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 006C PORTC=0x00;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 006D DDRC=0x00;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 006E 
; 0000 006F // Port D initialization
; 0000 0070 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0071 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0072 PORTD=0x00;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0073 DDRD=0x00;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0074 
; 0000 0075 // Port E initialization
; 0000 0076 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0077 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0078 PORTE=0x00;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0079 DDRE=0x00;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 007A 
; 0000 007B // Port F initialization
; 0000 007C // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 007D // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 007E PORTF=0x00;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 007F DDRF=0x00;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0080 
; 0000 0081 // Port G initialization
; 0000 0082 // Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0083 // State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0084 PORTG=0x00;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0085 DDRG=0x00;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0086 
; 0000 0087 // Port H initialization
; 0000 0088 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0089 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 008A PORTH=0x00;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 008B DDRH=0x00;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 008C 
; 0000 008D // Port J initialization
; 0000 008E // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 008F // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0090 PORTJ=0x00;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0091 DDRJ=0x00;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0092 
; 0000 0093 // Port K initialization
; 0000 0094 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0095 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0096 PORTK=0x00;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 0097 DDRK=0x00;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0098 
; 0000 0099 // Port L initialization
; 0000 009A // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 009B // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 009C PORTL=0x00;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 009D DDRL=0x00;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 009E 
; 0000 009F // Timer/Counter 0 initialization
; 0000 00A0 // Clock source: System Clock
; 0000 00A1 // Clock value: Timer 0 Stopped
; 0000 00A2 // Mode: Normal top=0xFF
; 0000 00A3 // OC0A output: Disconnected
; 0000 00A4 // OC0B output: Disconnected
; 0000 00A5 TCCR0A=0x00;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 00A6 TCCR0B=0x00;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 00A7 TCNT0=0x00;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 00A8 OCR0A=0x00;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 00A9 OCR0B=0x00;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 00AA 
; 0000 00AB // Timer/Counter 1 initialization
; 0000 00AC // Clock source: System Clock
; 0000 00AD // Clock value: Timer1 Stopped
; 0000 00AE // Mode: Normal top=0xFFFF
; 0000 00AF // OC1A output: Discon.
; 0000 00B0 // OC1B output: Discon.
; 0000 00B1 // OC1C output: Discon.
; 0000 00B2 // Noise Canceler: Off
; 0000 00B3 // Input Capture on Falling Edge
; 0000 00B4 // Timer1 Overflow Interrupt: Off
; 0000 00B5 // Input Capture Interrupt: Off
; 0000 00B6 // Compare A Match Interrupt: Off
; 0000 00B7 // Compare B Match Interrupt: Off
; 0000 00B8 // Compare C Match Interrupt: Off
; 0000 00B9 TCCR1A=0x00;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 00BA TCCR1B=0x00;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 00BB TCNT1H=0x00;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 00BC TCNT1L=0x00;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 00BD ICR1H=0x00;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 00BE ICR1L=0x00;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 00BF OCR1AH=0x00;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 00C0 OCR1AL=0x00;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00C1 OCR1BH=0x00;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 00C2 OCR1BL=0x00;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 00C3 OCR1CH=0x00;
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 00C4 OCR1CL=0x00;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 00C5 
; 0000 00C6 // Timer/Counter 2 initialization
; 0000 00C7 // Clock source: System Clock
; 0000 00C8 // Clock value: Timer2 Stopped
; 0000 00C9 // Mode: Normal top=0xFF
; 0000 00CA // OC2A output: Disconnected
; 0000 00CB // OC2B output: Disconnected
; 0000 00CC ASSR=0x00;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 00CD TCCR2A=0x00;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 00CE TCCR2B=0x00;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 00CF TCNT2=0x00;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 00D0 OCR2A=0x00;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00D1 OCR2B=0x00;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 00D2 
; 0000 00D3 // Timer/Counter 3 initialization
; 0000 00D4 // Clock source: System Clock
; 0000 00D5 // Clock value: Timer3 Stopped
; 0000 00D6 // Mode: Normal top=0xFFFF
; 0000 00D7 // OC3A output: Discon.
; 0000 00D8 // OC3B output: Discon.
; 0000 00D9 // OC3C output: Discon.
; 0000 00DA // Noise Canceler: Off
; 0000 00DB // Input Capture on Falling Edge
; 0000 00DC // Timer3 Overflow Interrupt: Off
; 0000 00DD // Input Capture Interrupt: Off
; 0000 00DE // Compare A Match Interrupt: Off
; 0000 00DF // Compare B Match Interrupt: Off
; 0000 00E0 // Compare C Match Interrupt: Off
; 0000 00E1 TCCR3A=0x00;
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 00E2 TCCR3B=0x00;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 00E3 TCNT3H=0x00;
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 00E4 TCNT3L=0x00;
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 00E5 ICR3H=0x00;
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 00E6 ICR3L=0x00;
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 00E7 OCR3AH=0x00;
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 00E8 OCR3AL=0x00;
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 00E9 OCR3BH=0x00;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 00EA OCR3BL=0x00;
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 00EB OCR3CH=0x00;
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 00EC OCR3CL=0x00;
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 00ED 
; 0000 00EE // Timer/Counter 4 initialization
; 0000 00EF // Clock source: System Clock
; 0000 00F0 // Clock value: Timer4 Stopped
; 0000 00F1 // Mode: Normal top=0xFFFF
; 0000 00F2 // OC4A output: Discon.
; 0000 00F3 // OC4B output: Discon.
; 0000 00F4 // OC4C output: Discon.
; 0000 00F5 // Noise Canceler: Off
; 0000 00F6 // Input Capture on Falling Edge
; 0000 00F7 // Timer4 Overflow Interrupt: Off
; 0000 00F8 // Input Capture Interrupt: Off
; 0000 00F9 // Compare A Match Interrupt: Off
; 0000 00FA // Compare B Match Interrupt: Off
; 0000 00FB // Compare C Match Interrupt: Off
; 0000 00FC TCCR4A=0x00;
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 00FD TCCR4B=0x00;
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 00FE TCNT4H=0x00;
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 00FF TCNT4L=0x00;
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 0100 ICR4H=0x00;
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 0101 ICR4L=0x00;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 0102 OCR4AH=0x00;
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 0103 OCR4AL=0x00;
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 0104 OCR4BH=0x00;
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 0105 OCR4BL=0x00;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 0106 OCR4CH=0x00;
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 0107 OCR4CL=0x00;
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 0108 
; 0000 0109 // Timer/Counter 5 initialization
; 0000 010A // Clock source: System Clock
; 0000 010B // Clock value: Timer5 Stopped
; 0000 010C // Mode: Normal top=0xFFFF
; 0000 010D // OC5A output: Discon.
; 0000 010E // OC5B output: Discon.
; 0000 010F // OC5C output: Discon.
; 0000 0110 // Noise Canceler: Off
; 0000 0111 // Input Capture on Falling Edge
; 0000 0112 // Timer5 Overflow Interrupt: Off
; 0000 0113 // Input Capture Interrupt: Off
; 0000 0114 // Compare A Match Interrupt: Off
; 0000 0115 // Compare B Match Interrupt: Off
; 0000 0116 // Compare C Match Interrupt: Off
; 0000 0117 TCCR5A=0x00;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 0118 TCCR5B=0x00;
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 0119 TCNT5H=0x00;
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 011A TCNT5L=0x00;
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 011B ICR5H=0x00;
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 011C ICR5L=0x00;
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 011D OCR5AH=0x00;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 011E OCR5AL=0x00;
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 011F OCR5BH=0x00;
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 0120 OCR5BL=0x00;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 0121 OCR5CH=0x00;
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 0122 OCR5CL=0x00;
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 0123 
; 0000 0124 // External Interrupt(s) initialization
; 0000 0125 // INT0: Off
; 0000 0126 // INT1: Off
; 0000 0127 // INT2: Off
; 0000 0128 // INT3: Off
; 0000 0129 // INT4: Off
; 0000 012A // INT5: Off
; 0000 012B // INT6: Off
; 0000 012C // INT7: Off
; 0000 012D EICRA=0x00;
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 012E EICRB=0x00;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 012F EIMSK=0x00;
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 0130 // PCINT0 interrupt: Off
; 0000 0131 // PCINT1 interrupt: Off
; 0000 0132 // PCINT2 interrupt: Off
; 0000 0133 // PCINT3 interrupt: Off
; 0000 0134 // PCINT4 interrupt: Off
; 0000 0135 // PCINT5 interrupt: Off
; 0000 0136 // PCINT6 interrupt: Off
; 0000 0137 // PCINT7 interrupt: Off
; 0000 0138 // PCINT8 interrupt: Off
; 0000 0139 // PCINT9 interrupt: Off
; 0000 013A // PCINT10 interrupt: Off
; 0000 013B // PCINT11 interrupt: Off
; 0000 013C // PCINT12 interrupt: Off
; 0000 013D // PCINT13 interrupt: Off
; 0000 013E // PCINT14 interrupt: Off
; 0000 013F // PCINT15 interrupt: Off
; 0000 0140 // PCINT16 interrupt: Off
; 0000 0141 // PCINT17 interrupt: Off
; 0000 0142 // PCINT18 interrupt: Off
; 0000 0143 // PCINT19 interrupt: Off
; 0000 0144 // PCINT20 interrupt: Off
; 0000 0145 // PCINT21 interrupt: Off
; 0000 0146 // PCINT22 interrupt: Off
; 0000 0147 // PCINT23 interrupt: Off
; 0000 0148 PCMSK0=0x00;
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 0149 PCMSK1=0x00;
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 014A PCMSK2=0x00;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 014B PCICR=0x00;
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 014C 
; 0000 014D // Timer/Counter 0 Interrupt(s) initialization
; 0000 014E TIMSK0=0x00;
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 014F 
; 0000 0150 // Timer/Counter 1 Interrupt(s) initialization
; 0000 0151 TIMSK1=0x00;
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 0152 
; 0000 0153 // Timer/Counter 2 Interrupt(s) initialization
; 0000 0154 TIMSK2=0x00;
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 0155 
; 0000 0156 // Timer/Counter 3 Interrupt(s) initialization
; 0000 0157 TIMSK3=0x00;
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 0158 
; 0000 0159 // Timer/Counter 4 Interrupt(s) initialization
; 0000 015A TIMSK4=0x00;
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 015B 
; 0000 015C // Timer/Counter 5 Interrupt(s) initialization
; 0000 015D TIMSK5=0x00;
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 015E 
; 0000 015F // USART0 initialization
; 0000 0160 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0161 // USART0 Receiver: On
; 0000 0162 // USART0 Transmitter: On
; 0000 0163 // USART0 Mode: Asynchronous
; 0000 0164 // USART0 Baud Rate: 9600
; 0000 0165 UCSR0A=0x00;
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 0166 UCSR0B=0x18;
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 0167 UCSR0C=0x06;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 0168 UBRR0H=0x00;
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 0169 UBRR0L=0x67;
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 016A 
; 0000 016B // USART1 initialization
; 0000 016C // USART1 disabled
; 0000 016D UCSR1B=0x00;
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 016E 
; 0000 016F // USART2 initialization
; 0000 0170 // USART2 disabled
; 0000 0171 UCSR2B=0x00;
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 0172 
; 0000 0173 // USART3 initialization
; 0000 0174 // USART3 disabled
; 0000 0175 UCSR3B=0x00;
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 0176 
; 0000 0177 // Analog Comparator initialization
; 0000 0178 // Analog Comparator: Off
; 0000 0179 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 017A ACSR=0x80;
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 017B ADCSRB=0x00;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 017C DIDR1=0x00;
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 017D 
; 0000 017E // ADC initialization
; 0000 017F // ADC disabled
; 0000 0180 ADCSRA=0x00;
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 0181 
; 0000 0182 // SPI initialization
; 0000 0183 // SPI Type: Slave
; 0000 0184 // SPI Clock Phase: Cycle Start
; 0000 0185 // SPI Clock Polarity: Low
; 0000 0186 // SPI Data Order: MSB First
; 0000 0187 SPCR=0xC0;
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 0188 SPSR=0x00;
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 0189 
; 0000 018A // Clear the SPI interrupt flag
; 0000 018B #asm
;PCODE: $00000161 VOL: 0
; 0000 018C     in   r30,spsr
    in   r30,spsr
;PCODE: $00000162 VOL: 0
; 0000 018D     in   r30,spdr
    in   r30,spdr
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 018E #endasm
; 0000 018F 
; 0000 0190 // TWI initialization
; 0000 0191 // TWI disabled
; 0000 0192 TWCR=0x00;
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 0193 
; 0000 0194 // Global enable interrupts
; 0000 0195 #asm("sei")
;PCODE: $00000167 VOL: 0
	sei
;PCODE: $00000168 VOL: 0
; 0000 0196 
; 0000 0197 
; 0000 0198 }
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
